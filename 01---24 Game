# 24 Game Solver  

## Description  
The **24 Game** tests a person's mental arithmetic. The goal is to arrange four given digits using arithmetic operations so that the result evaluates to **24**.  

## Problem Statement  
Implement a function that:  
- Takes a **string of four digits** as input, where each digit is from **1 to 9** (inclusive), and repetitions are allowed.  
- Returns an **arithmetic expression** that evaluates to **24**.  
- If no such solution exists, returns `"no solution exists"`.  

## Rules  
1. **Allowed Operators:** `+`, `-`, `*`, `/`.  
2. **Division Handling:** Should use **floating point or rational arithmetic** to preserve remainders.  
3. **Forming Multi-Digit Numbers:** **Not allowed** (e.g., `"12+12"` is invalid for input `"1221"`).  
4. **Digit Order:** The order of given digits **does not need to be preserved**.  

## Examples  

| Input  | Output |
|--------|----------------|
| `solve24("4878")` | `(7-8/8)*4` |
| `solve24("1234")` | `3*1*4*2` |
| `solve24("6789")` | `(6*8)/(9-7)` |
| `solve24("1127")` | `(1+7)*(2+1)` |

---

## Rough Thinking  

```plaintext
* Takes in a string of four digits.
* Each digit is from 1 to 9 (inclusive) with repetitions.
* Returns an arithmetic expression that evaluates to 24.
* OR returns "no solution exists".
* Operators allowed: *, /, +, -.

* Given four digits, obtain all four-slot permutations of the digits (no repetitions allowed).
* Given four symbols, obtain all three-slot permutations of the symbols (with repetitions allowed).

* Now, let's discuss bracket positioning:
    - It dictates THE ORDER OF OPERATIONAL EVALUATION.
    - Since we have 3 operators, operational evaluation happens in 3 steps.
    - The concept of BODMAS prevents excess brackets, e.g., (7-8/8)*4 and (7-(8/8))*4.
      In this example, the second bracket is useless because division already evaluates before subtraction as per BODMAS rule.
    - Hold on, what if there are a set number of ways to arrange the brackets?
      This means for each permutation, we simply go through each possible bracket arrangement.

```
